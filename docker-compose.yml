# A note about the paths in this file
# The docker compose running inside *this* container it actually
# running again the host docker, which means any volumes are resolving
# paths on the *host*, not inside this container.
# However, the build context is inside this container, so paths are
# resolved local to the container we're running in.

version: "3.3"
services:
  pwr-cutter:
    build:
      context: ./component-farm
      args:
        DNS_SERVER: ${DNS_SERVER}
      dockerfile: power-cutter.dockerfile
    image: registry.freedesktop.org/mupuf/valve-infra/pwr-cutter
    network_mode: host
  dnsmasq:
    build:
      context: ./component-farm
      dockerfile: dnsmasq.dockerfile
    cap_add:
      - NET_ADMIN
    volumes:
      - ${TMP_MOUNT}/dhcp/dnsmasq.conf:/dnsmasq.conf
      - ${TMP_MOUNT}/tftp/:/tftp
      - ${TMP_MOUNT}/nfs-roots:/tftp/nfs
    image: registry.freedesktop.org/mupuf/valve-infra/dnsmasq
    command: --log-facility=- --conf-file=/dnsmasq.conf --interface=${PRIVATE_INTERFACE}
    network_mode: host
  nfs:
    build:
      context: ./component-farm/docker-nfs-server
    # FIXME: Raise a bug upstream about this image, the entrypoint is
    # not +x, which for some reason is fine outside of QEMU, but when
    # run inside the VM, I get a permission denied error,
    # ERROR: for app_nfs_1  Cannot start service nfs: OCI runtime create failed: container_linux.go:370: starting container process caused: exec: "/usr/local/bin/entrypoint.sh": permission denied: unknown
    entrypoint: ["bash", "/usr/local/bin/entrypoint.sh"]
    privileged: true
    volumes:
      - ${TMP_MOUNT}/nfs/exports:/etc/exports
      - ${TMP_MOUNT}/nfs-roots:/nfs
      - /lib/modules:/lib/modules
    # FIXME: Switching to NFSv4 would reduce the number of ports this
    # service needs.
    ports:
      - "2049:2049"
      - "2049:2049/udp"
      - "111:111"
      - "111:111/udp"
      - "32765:32765"
      - "32765:32765/udp"
      - "32767:32767"
      - "32767:32767/udp"
    image: registry.freedesktop.org/mupuf/valve-infra/nfs
  gitlab-runner:
    image: gitlab/gitlab-runner:alpine-v13.5.0
    volumes:
      - ${PERMANENT_MOUNT}/gitlab-runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
