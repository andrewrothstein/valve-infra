version: "3.3"

services:
  mars:
    image: registry.freedesktop.org/mupuf/mars
    environment:
      - MARS_HOST=10.42.0.1
      - MARS_DEBUG=True
      - MARS_SECRET_KEY=$MARS_SECRET_KEY
      - MARS_SQLITE_PATH=${PERMANENT_MOUNT}/mars.sqlite3
      - FARM_NAME=$FARM_NAME
    ports:
      - "80:80/tcp"
    volumes:
      - /mnt:/mnt
  boots:
    privileged: true
    network_mode: host
    image: registry.freedesktop.org/chturne/boots
    environment:
      - BOOTS_SERVICE_PORT=8087
      - BOOTS_HTTP_SERVICE_PORT=8088
      - PRIVATE_INTERFACE=$PRIVATE_INTERFACE
      - MARS_HOST=http://10.42.0.1:80
      - DEFAULT_KERNEL=http://10.42.0.1:9000/boot/default_kernel
      - DEFAULT_INITRD=http://10.42.0.1:9000/boot/default_boot2container.cpio.xz
      - DEFAULT_CMDLINE=b2c.container="-ti --tls-verify=false docker://10.42.0.1:8002/mupuf/valve-infra/machine_registration:latest register" b2c.ntp_peer="10.42.0.1" b2c.cache_device=none loglevel=6
    volumes:
      - ${TMP_MOUNT}/boots:/boots
      - ${TMP_MOUNT}/boots/nfs-roots:/nfs
      - ${TMP_MOUNT}/boots/nfs-roots:/boots/tftp/nfs
      - /lib/modules:/lib/modules
  executor:
    privileged: true
    network_mode: host
    image: registry.freedesktop.org/mupuf/valve-infra/executor
    environment:
      - EXECUTOR_PORT=8003
      - EXECUTOR_REGISTRATION_JOB=/app/job_templates/register.yml.j2
      - EXECUTOR_BOOTLOOP_JOB=/app/job_templates/bootloop.yml.j2
      - SERGENT_HARTMAN_BOOT_COUNT=100
      - SERGENT_HARTMAN_QUALIFYING_BOOT_COUNT=100
      - SERGENT_HARTMAN_REGISTRATION_RETRIAL_DELAY=120
      - GITLAB_REGISTRATION_TOKEN=$GITLAB_REGISTRATION_TOKEN
      - GITLAB_ACCESS_TOKEN=$GITLAB_ACCESS_TOKEN
      - GITLAB_CONF_FILE=/etc/gitlab-runner/config.toml
      - FARM_NAME=$FARM_NAME
      - MARS_URL=http://10.42.0.1:80
      - SALAD_URL=http://10.42.0.1:8005
      - BOOTS_URL=http://10.42.0.1:8087
      - MINIO_URL=http://10.42.0.1:9000
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    volumes:
      - ${TMP_MOUNT}/gitlab-runner:/etc/gitlab-runner
    restart: unless-stopped
  gitlab-runner:
    image: gitlab/gitlab-runner:alpine-v13.12.0
    volumes:
      - ${TMP_MOUNT}/gitlab-runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/config/gitlab_runner_seccomp.json:/usr/share/containers/seccomp.json
  salad:
    privileged: true
    network_mode: host
    image: registry.freedesktop.org/mupuf/valve-infra/salad
    environment:
     - SALAD_PORT=8005
    restart: unless-stopped
  ntpd:
    image: ermaker/chrony
    cap_add:
      - SYS_TIME
    environment:
      - CHRONY_SERVERS=0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org
    ports:
      - 123:123/udp
  fdo_proxy_registry:
    image: registry
    environment:
      - REGISTRY_PROXY_REMOTEURL=https://registry.freedesktop.org
    restart: always
    volumes:
      - ${REGISTRY_MOUNT}:/var/lib/registry
    ports:
      - 8002:5000/tcp
  local_registry:
    image: registry
    restart: always
    ports:
      - 8004:5000/tcp
  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
    volumes:
      - ${TMP_MOUNT}/minio:/data
    command: server /data
    ports:
      - 9000:9000/tcp
  minioprovisioner:
    image: minio/mc
    depends_on:
      # Practically useless, and hence the loop in the entrypoint, but
      # semantically useful.
      - minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
      - MINIO_URL=$MINIO_URL
    entrypoint: >
      /bin/sh -c "
      while ! /usr/bin/mc alias set minio ${MINIO_URL} minioadmin $MINIO_ROOT_PASSWORD; do
         sleep 0.1;
      done;
      /usr/bin/mc mb --ignore-existing minio/jobs minio/boot/;
      /usr/bin/mc policy set public minio/boot;
      /usr/bin/mc policy set public minio/jobs;
      exit 0;
      "
