stages:
- containers
- python

variables:
  GIT_SUBMODULE_STRATEGY: recursive

.python_package base:
  image: python:3.9
  stage: python
  rules:
    - changes:
      - $CI_JOB_NAME/**/*
      - .gitlab-ci.yml
  script:
    - cd $CI_JOB_NAME
    - pip install build pycodestyle
    - pycodestyle --max-line-length=120 .
    - pip install -r requirements.txt
    - python -m unittest *.py

.pip_package base:
  image: python:3.9
  stage: python
  rules:
    - changes:
      - $CI_JOB_NAME/setup.cfg
      # - .gitlab-ci.yml  # NOTE: We can only release a new version when the version changed
  script:
    - pip install build pycodestyle
    - pycodestyle $CI_JOB_NAME
    - python3 -m build $CI_JOB_NAME
    - |
      if [[ "$CI_COMMIT_BRANCH" == "master" && -n "$TWINE_PASSWORD" ]]; then \
          pip install twine; \
          twine upload -u "__token__" $CI_JOB_NAME/dist/*; \
      fi

gfxinfo:
  extends:
    - .pip_package base
  variables:
    TWINE_PASSWORD: $PIP_GFXINFO_TOKEN
  before_script:
    - pushd gfxinfo/src/gfxinfo
    # Impossible to re-use cache_database() as it would force us to install all the deps of gfxinfo just to access these URLs...
    - wget "https://gitlab.freedesktop.org/agd5f/linux/-/raw/amd-staging-drm-next/drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c"
    - wget "https://gitlab.freedesktop.org/mesa/drm/-/raw/master/data/amdgpu.ids"
    - popd

valvetraces:
  extends:
    - .pip_package base
  variables:
    TWINE_PASSWORD: $PIP_VALVETRACES_TOKEN

.container base:
  image: docker/compose:alpine-1.27.4
  stage: containers
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_JOB_NAME:latest
  before_script:
    - if [[ "$CI_COMMIT_BRANCH" == "master" ]]; then docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY; fi
  after_script:
    - if [[ "$CI_COMMIT_BRANCH" == "master" ]]; then docker push $IMAGE_NAME; fi

executor:
  extends:
    - .container base
  rules:
    - changes:
      - executor/**/*
      - .gitlab-ci.yml
  script:
    - docker build -t $IMAGE_NAME -f executor/Dockerfile .
    - |
       docker run --rm \
           --entrypoint=sh $IMAGE_NAME \
           -c 'pip install tox && cd executor && tox'

machine_registration:
  extends:
    - .container base
  rules:
    - changes:
      - machine_registration/**/*
      - gfxinfo/**/*
      - .gitlab-ci.yml
  script:
    - docker build -t $IMAGE_NAME -f machine_registration/Dockerfile .

gitlab-trigger:
  extends:
    - .container base
  rules:
    - changes:
      - containers/gitlab-trigger/**/*
      - .gitlab-ci.yml
  script:
    - docker build -t $IMAGE_NAME -f containers/gitlab-trigger/Dockerfile .

salad:
  extends:
    - .container base
  rules:
    - changes:
      - salad/**/*
      - .gitlab-ci.yml
  script:
    - docker build -t $IMAGE_NAME salad/

ipxe-boot-server:
  extends:
    - .python_package base

valve-infra:
  extends:
    - .container base
  rules:
    - changes:
      - Dockerfile
      - .gitlab-ci.yml
  script:
    - docker build -t $IMAGE_NAME -f containers/valve-infra/Dockerfile containers/valve-infra
