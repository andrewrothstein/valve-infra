#!/usr/bin/nft -f
table inet filter {
    chain input {
        type filter hook input priority filter; policy drop;
        ct state { established, related } accept
        ct state invalid drop
        iifname "lo" accept comment "accept incoming on lo"
        iifname "cni-podman*" accept comment "accept podman CNI bridge"
        iifname "podman*" accept comment "accept podman netavark bridge"
        iifname "private" accept comment "accept incoming on private"

        # allow ping
        ip protocol icmp accept
        meta l4proto ipv6-icmp accept

        # allow ssh
        tcp dport ssh accept comment "accept SSH"

        # explicitly drop random broadcasts/multicast here, so they aren't logged later
        pkttype { broadcast,multicast} drop comment "drop random broadcasts"
    }
    chain output {
        # drop all outbound connections by default
        type filter hook output priority 0; policy drop;

        ct state { related, established } accept

        oifname "lo" accept comment "accept outgoing to loopback"
        oifname "private" accept comment "accept outgoing to private"
        oifname "cni-podman*" accept comment "accept podman CNI bridge"
        oifname "podman*" accept comment "accept podman netavark bridge"
        oifname "veth*" accept

        # allow DNS
        udp dport 53 accept comment "accept DNS"

        # allow HTTP(S)
        tcp dport {http, https } accept comment "accept HTTP(S)"

        # allow NTP
        udp dport 123 accept comment "accept NTP"

        # allow SNMP
        udp dport 161 accept comment "accept SNMP"

        # explicitly drop random broadcasts/multicast here, so they aren't logged later
        pkttype { broadcast,multicast} drop comment "drop random broadcasts"
    }
    chain forward {
        type filter hook forward priority filter; policy drop

        iifname "cni-podman*" accept comment "accept podman CNI bridge"
        oifname "cni-podman*" accept comment "accept podman CNI bridge"

        iifname "podman*" accept comment "accept podman netavark bridge"
        oifname "podman*" accept comment "accept podman netavark bridge"
    }
}
