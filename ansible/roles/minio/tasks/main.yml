---
- name: minio container service
  ansible.builtin.include_role:
    name: "systemd_podman"
  vars:
    container_name: "minio"
    container_service_target: infra.target
    container_image: registry.freedesktop.org/mupuf/valve-infra/minio
    container_volumes:
      - "{{ tmp_mount }}/minio:/data"
    container_host_network: true
    container_env_files:
      - "{{ base_config_env_file }}"
    optional_container_env_files:
      - "{{ config_env_file }}"
    container_cmd: "server /data"
    service_pre_conditions:
      - "mkdir -pv {{ tmp_mount }}/minio"
    part_of:
      - "infra.service"

- name: configuring minio user/passwords
  become: true
  ansible.builtin.blockinfile:
    create: true
    path: "{{ base_config_env_file }}"
    mode: '0644'
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ role_name }}"
    block: |
      MINIO_ROOT_USER=minioadmin
      VALVETRACES_MINIO_PASSWORD={{ valvetraces_minio_password }}
      MINIO_ROOT_PASSWORD={{ lookup('community.general.random_string', length=12, special=false) }}
  # config changes are applied to minio by this service
  notify: "Restart minio_configure"

- name: Installing minio_configure script
  become: true
  ansible.builtin.template:
    src: 'minio_configure.sh.j2'
    dest: '/usr/local/bin/minio_configure'
    mode: 0755
    owner: root
  # config changes are applied to minio by this service
  notify: "Restart minio_configure"

- name: Installing minio_configure systemd.service file
  become: true
  ansible.builtin.template:
    src: 'minio_configure.service.j2'
    dest: '/etc/systemd/system/minio_configure.service'
    mode: 0644

- name: Ensure minio configuration directory exists
  become: true
  ansible.builtin.file:
    mode: 0744
    path: /etc/minio
    state: directory

- name: Installing minio bucket policies
  become: true
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  loop:
    - { src: 'valvetraces.json.j2', dest: '/etc/minio/valvetraces.json' }
    - { src: 'valvetraces-ro.json.j2', dest: '/etc/minio/valvetraces-ro.json' }

- name: Enable minio_configure service
  become: true
  ansible.builtin.systemd:
    name: 'minio_configure'
    enabled: true

- name: Get status of system services
  ansible.builtin.service_facts:
  register: services_state
