---
# Make sure this is the first thing to run! We need this fact early.
- name: Capture the init process name
  become: true
  ansible.builtin.shell: set -o pipefail ; ps -p 1 -o comm | tail -n1
  register: init_ps_command_output
  changed_when: init_ps_command_output.rc != 0

# Used to figure when to try and declartively push services into
# particular states. When running within a container, this will be !=
# systemd (typically instead it's sh or bash).
- name: Add the init process name to the facts database
  ansible.builtin.set_fact:
    pid_1_name: "{{ init_ps_command_output.stdout }}"

- name: Check if service_mgr is overridden
  ansible.builtin.set_fact:
    pid_1_name: "{{ service_mgr_override }}"
  when: service_mgr_override is defined

- name: Debug string
  ansible.builtin.debug:
    msg: "pid_1_name is {{ pid_1_name }}"

- name: Ensure custom resolv.conf
  become: true
  ansible.builtin.copy:
    src: resolv.conf
    dest: /etc/resolv.conf
    mode: 0744

- name: Update pacman cache
  pacman:
    update_cache: true
    upgrade: false
  changed_when: false

- name: Installing base packages
  become: true
  pacman:
    state: present
    name:
      - vim
      - dhcpcd
      - python
      - python-netifaces
      - tmux
      - tmuxp

- name: Enable timesyncd
  become: true
  ansible.builtin.systemd:
    name: systemd-timesyncd
    enabled: true

- name: disable the first-boot service
  become: true
  ansible.builtin.systemd:
    name: systemd-firstboot.service
    masked: true

- name: Installing sysctl config
  become: true
  ansible.builtin.copy:
    src: 10-printk.conf
    dest: /etc/sysctl.d/10-printk.conf
    mode: 0644
