#!/usr/bin/env python3

#
# Copyright Â© 2021 Valve Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

import unittest
import netifaces
import subprocess
import os

class Network(unittest.TestCase):
    def test_private_interface_exist(self):
        self.assertIn("private", netifaces.interfaces())

    def __assert_unit_active(self, unit_name):
        self.assertEqual(subprocess.run(['/usr/bin/systemctl', 'is-active', '-q', unit_name]).returncode, 0,
                        f"The unit '{unit_name}' is not active!")

    def test_systemd_unit_getty(self):
        self.__assert_unit_active('getty@tty1.service')

    def test_systemd_unit_infra(self):
        self.__assert_unit_active('infra.service')

    def test_systemd_unit_podman_socket(self):
        self.__assert_unit_active('podman.socket')

if __name__ == '__main__':
    unittest.main()
